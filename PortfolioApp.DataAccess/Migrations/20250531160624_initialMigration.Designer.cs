// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioApp.DataAccess;

#nullable disable

namespace PortfolioApp.DataAccess.Migrations
{
    [DbContext(typeof(PortfolioAppContext))]
    [Migration("20250531160624_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PortfolioApp.Domain.SimulationInput", b =>
                {
                    b.Property<int>("SimulationInputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PriceChange")
                        .HasColumnType("REAL");

                    b.Property<int>("SimulationRunId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SimulationInputId");

                    b.HasIndex("SimulationRunId");

                    b.ToTable("SimulationInputs");
                });

            modelBuilder.Entity("PortfolioApp.Domain.SimulationResult", b =>
                {
                    b.Property<int>("SimulationResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortfolioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SimulationRunId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalCollateralValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalExpectedLoss")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalOutstandingAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalScenarioCollateralValue")
                        .HasColumnType("TEXT");

                    b.HasKey("SimulationResultId");

                    b.HasIndex("SimulationRunId");

                    b.ToTable("SimulationResults");
                });

            modelBuilder.Entity("PortfolioApp.Domain.SimulationRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationMs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Log")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SimulationRuns");
                });

            modelBuilder.Entity("PortfolioApp.Domain.SimulationInput", b =>
                {
                    b.HasOne("PortfolioApp.Domain.SimulationRun", "SimulationRun")
                        .WithMany("SimulationInputs")
                        .HasForeignKey("SimulationRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SimulationRun");
                });

            modelBuilder.Entity("PortfolioApp.Domain.SimulationResult", b =>
                {
                    b.HasOne("PortfolioApp.Domain.SimulationRun", "SimulationRun")
                        .WithMany("SimulationResults")
                        .HasForeignKey("SimulationRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SimulationRun");
                });

            modelBuilder.Entity("PortfolioApp.Domain.SimulationRun", b =>
                {
                    b.Navigation("SimulationInputs");

                    b.Navigation("SimulationResults");
                });
#pragma warning restore 612, 618
        }
    }
}
