// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioApp.DataAccess;

#nullable disable

namespace PortfolioApp.DataAccess.Migrations
{
    [DbContext(typeof(PortfolioAppContext))]
    partial class PortfolioAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PortfolioApp.Domain.AggregatedResult", b =>
                {
                    b.Property<int>("AggregatedResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RunMetadataId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalCollateral")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalExpectedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOutstanding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalScenarioCollateral")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AggregatedResultId");

                    b.HasIndex("RunMetadataId");

                    b.ToTable("SimulationResults");
                });

            modelBuilder.Entity("PortfolioApp.Domain.RunMetadata", b =>
                {
                    b.Property<int>("RunMetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DurationMs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PriceChangesJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RunTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RunMetadataId");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("PortfolioApp.Domain.AggregatedResult", b =>
                {
                    b.HasOne("PortfolioApp.Domain.RunMetadata", "RunMetadata")
                        .WithMany("Results")
                        .HasForeignKey("RunMetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RunMetadata");
                });

            modelBuilder.Entity("PortfolioApp.Domain.RunMetadata", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
